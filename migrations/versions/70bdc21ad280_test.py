"""test

Revision ID: 70bdc21ad280
Revises: 
Create Date: 2025-08-17 13:00:52.479264

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '70bdc21ad280'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_shop_usage_id', table_name='shop_usage')
    op.drop_table('shop_usage')
    op.drop_index('ix_oauth_states_id', table_name='oauth_states')
    op.drop_index('ix_oauth_states_state', table_name='oauth_states')
    op.drop_table('oauth_states')
    op.drop_index('ix_webhook_events_id', table_name='webhook_events')
    op.drop_table('webhook_events')
    op.drop_index('ix_shops_id', table_name='shops')
    op.drop_index('ix_shops_shop_domain', table_name='shops')
    op.drop_table('shops')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('shops',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('shops_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('shop_domain', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('myshopify_domain', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('access_token', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('scopes', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('shop_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('shop_email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('shop_owner', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('country_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('timezone', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('primary_locale', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('plan_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('plan_display_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('primary_domain', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('installed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('last_seen_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('uninstalled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('uninstalled_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('app_settings', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('subscription_status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='shops_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_shops_shop_domain', 'shops', ['shop_domain'], unique=False)
    op.create_index('ix_shops_id', 'shops', ['id'], unique=False)
    op.create_table('webhook_events',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('shop_domain', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('topic', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('webhook_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('payload', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('headers', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('processed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('processed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('received_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['shop_domain'], ['shops.shop_domain'], name='webhook_events_shop_domain_fkey'),
    sa.PrimaryKeyConstraint('id', name='webhook_events_pkey')
    )
    op.create_index('ix_webhook_events_id', 'webhook_events', ['id'], unique=False)
    op.create_table('oauth_states',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('state', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('shop_domain', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='oauth_states_pkey')
    )
    op.create_index('ix_oauth_states_state', 'oauth_states', ['state'], unique=False)
    op.create_index('ix_oauth_states_id', 'oauth_states', ['id'], unique=False)
    op.create_table('shop_usage',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('shop_domain', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('metric_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('metric_value', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('metric_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['shop_domain'], ['shops.shop_domain'], name='shop_usage_shop_domain_fkey'),
    sa.PrimaryKeyConstraint('id', name='shop_usage_pkey')
    )
    op.create_index('ix_shop_usage_id', 'shop_usage', ['id'], unique=False)
    # ### end Alembic commands ###
